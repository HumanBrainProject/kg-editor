###
#  summary: Check if a specific entity id is available
#  tags:
#    - editor
#  parameters:
#  - name: id
#    in: path
#    description: the UUID of the instance to delete
#    required: true
#    type: string
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
GET    /:id                  controllers.EditorController.getInstance(id: String, metadata:Boolean?=false, returnPermissions:Boolean?=false)

###
#  summary: get a list of entities
#  tags:
#    - editor
#  parameters:
#  - name: stage
#    in: path
#    description: the stage
#    required: false
#    type: string
#  - in: body
#    description: A list of IDs
#    required: true
#    type: array
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
POST    /list                 controllers.EditorController.getInstancesList(stage:String?="IN_PROGRESS", metadata:Boolean?=false)

###
#  summary: get a summary list of entities
#  tags:
#    - editor
#  parameters:
#  - name: stage
#    in: path
#    description: the stage
#    required: false
#    type: string
#  - in: body
#    description: A list of IDs
#    required: true
#    type: array
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
POST    /summary                 controllers.EditorController.getInstancesSummary(stage:String?="IN_PROGRESS", metadata:Boolean?=false)

###
#  summary: get label for a list of entities
#  tags:
#    - editor
#  parameters:
#  - name: stage
#    in: path
#    description: the stage
#    required: false
#    type: string
#  - in: body
#    description: A list of IDs
#    required: true
#    type: array
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
POST    /label                 controllers.EditorController.getInstancesLabel(stage:String?="IN_PROGRESS", metadata:Boolean?=false)

###
#  summary: Return suggestions
#  tags:
#    - editor
#  - name: id
#    in: path
#    description: instance id
#    required: true
#    type: string
#  - name: field
#    in: path
#    description: field to look suggestions for
#    required: true
#    type: string
#  - name: type
#    in: path
#    description: filter suggestions for a specific type
#    required: false
#    type: string
#  - name: start
#    in: path
#    description: param to start
#    required: false
#    type: int
#  - name: size
#    in: path
#    description: total size returned
#    required: false
#    type: int
#  - name: search
#    in: path
#    description: search query
#    required: false
#    type: string
#  parameters:
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
POST /:id/suggestions                  controllers.EditorController.getSuggestions(id: String, field: String, type: Option[String], start: Int=0, size: Int=50, search: String?="")


###
#  summary: return the graph payload for a specific entity type
#  tags:
#    - editor
#  parameters:
#  - name: id
#    in: path
#    description: the UUID of the instance to fetch
#    required: true
#    type: string
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
GET    /:id/graph                  controllers.EditorController.getInstanceGraph(id: String)

###
#  summary: create a new instance
#  tags:
#    - editor
#  parameters:
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
#  - in: query
#    name: workspace
#    description: Workspace
#    required: true
#    type: string
###
POST   /                 controllers.EditorController.createInstanceWithoutId(workspace: String)

###
#  summary: create a new instance
#  tags:
#    - editor
#  parameters:
#  - name: id
#    in: path
#    description: id of the instance to create
#    required: true
#    type: string
#  - in: query
#    name: workspace
#    description: Workspace
#    required: true
#    type: string
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
POST   /:id                  controllers.EditorController.createInstanceWithId(workspace: String, id:String)

###
#  summary: update an instance
#  tags:
#    - editor
#  parameters:
#  - name: id
#    in: path
#    description: the UUID of the instance to update
#    required: true
#    type: string
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
PATCH   /:id                   controllers.EditorController.updateInstance(id: String)


###
#  summary: Delete a specific entity
#  tags:
#    - editor
#  parameters:
#  - name: id
#    in: path
#    description: the UUID of the instance to delete
#    required: true
#    type: string
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
DELETE    /:id                  controllers.EditorController.deleteInstance(id: String)

###
#  summary: Get the number of revisions available for a specific instance
#  tags:
#    - editor
#  parameters:
#  - name: org
#    in: path
#    description: organization the instance
#    required: true
#    type: string
#  - name: domain
#    in: path
#    description: domain of the instance
#    required: true
#    type: string
#  - name: schema
#    in: path
#    description: schema name
#    required: true
#    type: string
#  - name: version
#    in: path
#    description: version of the instance
#    required: true
#    type: string
#  - name: id
#    in: path
#    description: the UUID of the instance
#    required: true
#    type: string
#  - in: header
#    name: Authorization
#    description: Authorization token
#    required: false
#    type: string
###
# GET    /:org/:domain/:schema/:version/:id/revisions                         controllers.EditorController.getInstanceNumberOfAvailableRevisions(org: String, domain:String, schema: String, version:String, id: String)
